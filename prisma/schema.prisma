generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String   @unique
  password  String
  version   Int
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)
}

model Artist {
  id        String           @id @default(uuid())
  name      String
  grammy    Boolean
  albums    Album[]
  tracks    Track[]
  favorites FavoriteArtist[]
}

model FavoriteArtist {
  id       String @id @default(uuid())
  artistId String @unique
  artist   Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)
}

model Album {
  id        String          @id @default(uuid())
  name      String
  year      Int
  artistId  String?
  artist    Artist?         @relation(fields: [artistId], references: [id])
  tracks    Track[]
  favorites FavoriteAlbum[]
}

model FavoriteAlbum {
  id      String @id @default(uuid())
  albumId String @unique
  album   Album  @relation(fields: [albumId], references: [id], onDelete: Cascade)
}

model Track {
  id        String          @id @default(uuid())
  name      String
  duration  Int
  artistId  String?
  albumId   String?
  artist    Artist?         @relation(fields: [artistId], references: [id])
  album     Album?          @relation(fields: [albumId], references: [id])
  favorites FavoriteTrack[]
}

model FavoriteTrack {
  id      String @id @default(uuid())
  trackId String @unique
  track   Track  @relation(fields: [trackId], references: [id], onDelete: Cascade)
}
